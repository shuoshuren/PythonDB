1.查看数据库
show dbs

2.创建或者切换数据库
use 数据库名

3.删除数据库
删除当前指向打数据库
db.dropDatabase()

集合
1.创建集合
db.createCollection(集合名字，[参数])

2.查看集合
show collections

3.删除
db.集合名称.drop()

文档
1.插入
db.集合名称.insert(document)

2.简单查找
db.集合名称.find()

3.更新数据
db.集合名称,.update(<query>,<update>,(multi:<boolean>))
query:查询条件
update:更新操作
multi:可选，默认为false,表示更新找到打第一条记录，为true表示满足条件打文档全部更新

指定属性更新：通过操作符号$set

4.保存，如果文档存在，则修改，如果不存在，则添加
db.集合名称.save(document)

5.删除
db.集合名称.remove(<query>,{justOne:<boolean>})
query:可选，删除文档的条件
justOne：可选，如果为true,则只删除一条，默认为false,表示删除所有

数据查询：
find 查询
db.集合名称.find(条件文档)
findOne()：只返回第一个
db.集合名称.findOne({条件文档})，
pretty():将结果格式化
db.集合名称.find({条件文档}).pretty()

运算符:
小于:$lt
小于或等于:$lte
大于:$gt
大于或等于:$gte
不等于:ne

and:,
或:$or
范围:$in,$nin,判断是否在某个范围之内

正则表达式:
//或者$regex

自定义查询
使用$where后面写一个函数,返回满足条件的数据

limit():用于读取指定数量的文档
db.集合名称.find().limit(Number)

skip():用户跳过指定数量的文档
db.集合名称.find().skip(Number)

排序: sort()
db.集合名称.find().sort({字段名称:1,0})

统计个数:count()
db.集合名称.find().count()
或者
db.集合名称.count({条件})

消除重复:
distinct()对数据进行去重
db.集合名称.distinct('去重字段',{条件})

高级操作
1.聚合(aggregate)用于计算数据,类似sql的sum(),avg()
db.集合名称.aggregate([{管道:{表达式}}])

常用管道:
$group:将集合中的文档分组,可用于统计结果
$match:过滤数据,只输出符合条件的文档
$project:修改输入文档的结构,如重命名,增加,删除字段,创建计算结果
$sort:将输入文档排序后输出
$limit:限制聚合管道返回的文档数
$skip:跳过指定数量的文档,并返回余下的文档
$unwind:将数字类型的字段进行拆分

表达式:
处理输入文档并输出
表达式:$列名
常用表达式:
$sum:计算总和,$sum:1类似于count
$avg:计算平均值
$min:获取最小值
$max:计算最大值
$push:在结果文档中插入值到一个数组中
$first:根据资源文件的排序获取第一个文档数据
$last:根据资源文档的排序获取最后一个文档的数据

$group
$字段:表示使用某个字段
$$ROOT:可以将文档内容加入到结果集的数组中

$project（投影）
修改输入文档的结构，如重命名，增加，删除字段，创建计算结果

索引
建立索引
db.集合名称.ensureIndex({属性:1})  1:表示升序，-1：表示降序
性能分析：
explain("executionStats")
查看文档所有索引
db.集合.getIndexes()
删除索引
db.集合.dropIndexes("索引名称")
